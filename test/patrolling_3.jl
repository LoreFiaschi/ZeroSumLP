include("../src/Zero_Sum_LP.jl")
include("../../ArithmeticNonStandarNumbersLibrary/src/BAN.jl")
using .BAN

τ = 3;

#=
#P = [-10, -10, -α, -α, -1, -10];
#P = [-10, -10, -α, -α, -η, -10];
#P = [-30η, -10η, -1, -1, -η, -10η];
P = [-30η, -10η, -1, -1, -η*η, -10η];
#P = [-30, -10, -100, -100, -0.01, -10];
#P = [-30, -10, -100, -100, -1, -10];

#    1 2 3 4 5 6
D = [0 1 0 0 0 1;
     1 0 1 0 1 1;
	 0 0 0 1 1 0;
	 0 0 1 0 1 0;
	 0 1 1 1 0 1;
	 1 1 0 0 1 0];
=#


#=
#P = [-3, -10η, -1, -5η];
P = [-300, -10, -100, -5];


D = [0 1 0 1;
     1 0 1 0;
	 0 1 0 1;
	 1 0 1 0];
=#

#=
P = [-50, 0, 0, -20, -20, -20];

D = [0 1 0 0 0 0;
     1 0 1 0 0 0;
	 0 1 0 1 0 1;
	 0 0 1 0 1 0;
	 0 0 0 1 0 1;
	 0 0 1 0 1 0]
=#

n_nodes = 9;

if n_nodes== 8
#P = [0, -4, -10, -2, -1, -3, -8, -1];
#P = [-2η, -12-4η, -30-η, -6-8η, -3-3η, -9-5η, -20-6η, -3-8η]
#P = [0, -12-100η, -30, -6, -3, -9, -20, -3]
#P = [0, -12, -30, -6, -3, -9, -20, -3]
#P = [0, -13, -30, -6, -3, -9, -20, -3]
P = [-1, -1212, -3000, -600, -300, -900, -2000, -300]

#    2 3 4 5 6 7 8 9 
D = [0 1 1 1 1 0 0 0;
	 1 0 1 0 0 0 0 0;
	 1 1 0 1 0 0 0 0;
	 1 0 1 0 0 0 0 0;
	 1 0 0 0 0 1 0 1;
	 0 0 0 0 1 0 1 1;
	 0 0 0 0 0 1 0 1;
	 0 0 0 0 1 1 1 0];
else

#P = [0, 0, -4, -10, -2, -1, -3, -8, -1];
P = [-13, 0, -6, -30, -6, -3, -9, -20, -3];

#    1 2 3 4 5 6 7 8 9 
D = [0 1 0 0 0 1 0 0 0;
	 1 0 1 1 1 1 0 0 0;
	 0 1 0 1 0 0 0 0 0;
	 0 1 1 0 1 0 0 0 0;
	 0 1 0 1 0 0 0 0 0;
	 1 1 0 0 0 0 1 1 1;
	 0 0 0 0 0 1 0 1 0;
	 0 0 0 0 0 1 1 0 1;
	 0 0 0 0 0 1 0 1 0];
end

D = convert(Matrix{Bool}, D);

n_attacks = 1;
tol = Ban(0, ones(SIZE).*1e-5)

x, s = solve_patrolling(P, D, τ, n_attacks, verbose = false, eps=tol, genLatex = false, showprogress = true);

print("\tP: "); println(P); 
print("\tτ: "); println(τ);
print("\tNumber of states: $(length(s))"); println("");

x = denoise(x,1e-5);
for (xi, si) in zip(x, s)
	print("\t"); print(xi); print("\t"); println(si);
end